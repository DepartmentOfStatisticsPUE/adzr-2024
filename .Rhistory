1+1
sqrt(10)
plot(1:10, 1:10)
rabat1 <- 0.05
kwota <- 1000
rabat1*kwota -> wynik
n1 <- 10
n2 <- 8L ## liczba całkowita
n3 <- c(n1, n2)
n4 <- c(2023, 10, 9)
n4[2]
n4[c(1,3)]
n4[c(1,3)][1]
n4[2] <- 11
n4[c(1, 3)] <- c(2022, 10)
n4
seq(2, 10, 2)
1:10
10:1
-1:10
-(1:10)
kot <- "pazur"
kot[1]
koty <- c(kot, "bajtek", "dachowiec")
koty[3] <- 10
length(koty)
koty[length(koty)] ## odwołuję się do ostatniego elementu
n5 <- 1:10
sqrt(n5)
y <- 50 + 2.5*n5
n5 + sqrt(n5)
x1 <- seq(-10, 10, 1) # -10:10
x2 <- seq(1, 21, 1) # 1:21
y <- 10 + 2.6*x1 + x1*x2 + 0.8*sqrt(x2)
plot(x2, y)
A <- cbind(x1,x2, y)
A[1, 1]
A[1, ]
A[, 1]
A[1:5, 2:3]
wyniki_symulacji <- matrix(data = 0, ncol = 3, nrow = 10)
wyniki_symulacji
df1 <- data.frame(z1 = x1, z2 = x2, target = y)
df1$target
df1$target_1000 <- df1$target*1000
head(df1)
tail(df1)
dim(df1)
ncol(df1)
nrow(df1)
summary(df1)
summary(df1$target)
ma1 <- matrix(data=1:9, nrow = 3, ncol = 3)
ma
ma1
colSums(ma1)
dir.create('quizes')
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
head(rent)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
install.packages("readxl")
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
head(rent)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
install.packages("readxl")
rent <- as.data.frame(rent)
head(rent)
rent[, 1] # w data.frame wybór jednej kolumny skutkuje wektorem
rent[, 1, drop = FALSE] # drop = FALSE mówi, że mamy dostać ramkę danych
rent[, 1:10]
rent[, ncol(rent), drop = FALSE] # ostatnia kolumna
rent[, c(1, 5, 10)]
rent[, c("id", "price", "flat_area")]
rent$price ## wektor
summary(rent$price)
subset(rent, select = 1)
subset(rent, select = 1:3)
subset(rent, select = c(1,5, 10))
subset(rent, select = c("id", "price", "flat_area"))
subset(rent, select = id:flat_area)
rent[1,]
rent[1:3,]
rent[c(1, 5, 10), ]
rent[nrow(rent), ] ## tail(rent, 1)
mtcars["Mazda RX4",] # używam tutaj nazw wierszy
rent[rent$price <= 300, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 15000, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 300 & rent$price < 500,
c("id", "price", "ad_title", "flat_area")]
subset(rent,
subset = price > 300 & price < 500,
select = c("id", "price", "ad_title", "flat_area"))
subset(rent,
price > 300 & price < 500,
c("id", "price", "ad_title", "flat_area"))
subset(rent, flat_for_students == 1 & price < 1000)
subset(rent, flat_for_students == TRUE & price < 1000)
subset(rent, flat_for_students == T & price < 1000)
subset(rent, flat_area <= 50)
subset(rent, flat_area <= 50 & quarter == "centrum") ## to jest źle (mała litera)
subset(rent, flat_area <= 50 & quarter == "Centrum")
subset(rent, (quarter == "Centrum" | quarter == "Rataje") & flat_area <= 50)
subset(rent, quarter %in% c("Centrum", "Rataje") & flat_area <= 50)
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
head(rent)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
rent[, 1] # w data.frame wybór jednej kolumny skutkuje wektorem
rent[, 1, drop = FALSE] # drop = FALSE mówi, że mamy dostać ramkę danych
rent[, 1:10]
rent[, ncol(rent), drop = FALSE] # ostatnia kolumna
rent[, c(1, 5, 10)]
rent[, c("id", "price", "flat_area")]
rent$price ## wektor
summary(rent$price)
subset(rent, select = 1)
subset(rent, select = 1:3)
subset(rent, select = c(1,5, 10))
subset(rent, select = c("id", "price", "flat_area"))
subset(rent, select = id:flat_area)
rent[1,]
rent[1:3,]
rent[c(1, 5, 10), ]
rent[nrow(rent), ] ## tail(rent, 1)
mtcars["Mazda RX4",] # używam tutaj nazw wierszy
rent[rent$price <= 300, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 15000, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 300 & rent$price < 500,
c("id", "price", "ad_title", "flat_area")]
subset(rent,
subset = price > 300 & price < 500,
select = c("id", "price", "ad_title", "flat_area"))
subset(rent,
price > 300 & price < 500,
c("id", "price", "ad_title", "flat_area"))
subset(rent, flat_for_students == 1 & price < 1000)
subset(rent, flat_for_students == TRUE & price < 1000)
subset(rent, flat_for_students == T & price < 1000)
subset(rent, flat_area <= 50)
subset(rent, flat_area <= 50 & quarter == "centrum") ## to jest źle (mała litera)
subset(rent, flat_area <= 50 & quarter == "Centrum")
subset(rent, (quarter == "Centrum" | quarter == "Rataje") & flat_area <= 50)
subset(rent, quarter %in% c("Centrum", "Rataje") & flat_area <= 50)
subset(rent, flat_deposit == price, c("price", "flat_deposit"))
subset(rent, (flat_deposit/2) > 3*price, c("price", "flat_deposit"))
subset(rent,
grepl("ataner", ad_title, ignore.case = T),
c("ad_title", "price"))
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
rent |> subset(individual == TRUE) |> nrow()
rent |> subset(flat_rooms == 1 & price >= 3000)
table(rent$quarter)
rent |> subset(flat_for_students == TRUE & quarter %in% c("Żegrze", "Strzeszyn"))
rent |> subset(flat_for_students == TRUE & quarter %in% c("Żegrze", "Strzeszyn")) |> nrow()
rent |> subset(flat_furnished == TRUE | (price < 500 | price > 5000))
rent |> subset(flat_furnished == TRUE | (price < 500 | price > 10000)) |>
```
rent |> subset(flat_furnished == TRUE | (price < 500 | price > 10000)) |> NROW()
rent |> subset(flat_furnished == TRUE & (price < 500 | price > 10000)) |> NROW()
rent |> subset(flat_furnished == TRUE & (price < 500 | price > 5000)) |> NROW()
1+1
sqrt(10)
plot(1:10, 1:10)
rabat1 <- 0.05
kwota <- 1000
rabat1*kwota -> wynik
n1 <- 10
n2 <- 8L ## liczba całkowita
n3 <- c(n1, n2)
n4 <- c(2023, 10, 9)
n4[2]
n4[c(1,3)]
n4[c(1,3)][1]
n4[2] <- 11
n4[c(1, 3)] <- c(2022, 10)
n4
seq(2, 10, 2)
1:10
10:1
-1:10
-(1:10)
kot <- "pazur"
kot[1]
koty <- c(kot, "bajtek", "dachowiec")
koty[3] <- 10
length(koty)
koty[length(koty)] ## odwołuję się do ostatniego elementu
n5 <- 1:10
sqrt(n5)
y <- 50 + 2.5*n5
n5 + sqrt(n5)
x1 <- seq(-10, 10, 1) # -10:10
x2 <- seq(1, 21, 1) # 1:21
y <- 10 + 2.6*x1 + x1*x2 + 0.8*sqrt(x2)
plot(x2, y)
A <- cbind(x1,x2, y)
A[1, 1]
A[1, ]
A[, 1]
A[1:5, 2:3]
wyniki_symulacji <- matrix(data = 0, ncol = 3, nrow = 10)
wyniki_symulacji
df1 <- data.frame(z1 = x1, z2 = x2, target = y)
df1$target
df1$target_1000 <- df1$target*1000
head(df1)
tail(df1)
dim(df1)
ncol(df1)
nrow(df1)
summary(df1)
summary(df1$target)
