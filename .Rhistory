1+1
sqrt(10)
plot(1:10, 1:10)
rabat1 <- 0.05
kwota <- 1000
rabat1*kwota -> wynik
n1 <- 10
n2 <- 8L ## liczba całkowita
n3 <- c(n1, n2)
n4 <- c(2023, 10, 9)
n4[2]
n4[c(1,3)]
n4[c(1,3)][1]
n4[2] <- 11
n4[c(1, 3)] <- c(2022, 10)
n4
seq(2, 10, 2)
1:10
10:1
-1:10
-(1:10)
kot <- "pazur"
kot[1]
koty <- c(kot, "bajtek", "dachowiec")
koty[3] <- 10
length(koty)
koty[length(koty)] ## odwołuję się do ostatniego elementu
n5 <- 1:10
sqrt(n5)
y <- 50 + 2.5*n5
n5 + sqrt(n5)
x1 <- seq(-10, 10, 1) # -10:10
x2 <- seq(1, 21, 1) # 1:21
y <- 10 + 2.6*x1 + x1*x2 + 0.8*sqrt(x2)
plot(x2, y)
A <- cbind(x1,x2, y)
A[1, 1]
A[1, ]
A[, 1]
A[1:5, 2:3]
wyniki_symulacji <- matrix(data = 0, ncol = 3, nrow = 10)
wyniki_symulacji
df1 <- data.frame(z1 = x1, z2 = x2, target = y)
df1$target
df1$target_1000 <- df1$target*1000
head(df1)
tail(df1)
dim(df1)
ncol(df1)
nrow(df1)
summary(df1)
summary(df1$target)
ma1 <- matrix(data=1:9, nrow = 3, ncol = 3)
ma
ma1
colSums(ma1)
dir.create('quizes')
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
head(rent)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
install.packages("readxl")
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
head(rent)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
install.packages("readxl")
rent <- as.data.frame(rent)
head(rent)
rent[, 1] # w data.frame wybór jednej kolumny skutkuje wektorem
rent[, 1, drop = FALSE] # drop = FALSE mówi, że mamy dostać ramkę danych
rent[, 1:10]
rent[, ncol(rent), drop = FALSE] # ostatnia kolumna
rent[, c(1, 5, 10)]
rent[, c("id", "price", "flat_area")]
rent$price ## wektor
summary(rent$price)
subset(rent, select = 1)
subset(rent, select = 1:3)
subset(rent, select = c(1,5, 10))
subset(rent, select = c("id", "price", "flat_area"))
subset(rent, select = id:flat_area)
rent[1,]
rent[1:3,]
rent[c(1, 5, 10), ]
rent[nrow(rent), ] ## tail(rent, 1)
mtcars["Mazda RX4",] # używam tutaj nazw wierszy
rent[rent$price <= 300, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 15000, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 300 & rent$price < 500,
c("id", "price", "ad_title", "flat_area")]
subset(rent,
subset = price > 300 & price < 500,
select = c("id", "price", "ad_title", "flat_area"))
subset(rent,
price > 300 & price < 500,
c("id", "price", "ad_title", "flat_area"))
subset(rent, flat_for_students == 1 & price < 1000)
subset(rent, flat_for_students == TRUE & price < 1000)
subset(rent, flat_for_students == T & price < 1000)
subset(rent, flat_area <= 50)
subset(rent, flat_area <= 50 & quarter == "centrum") ## to jest źle (mała litera)
subset(rent, flat_area <= 50 & quarter == "Centrum")
subset(rent, (quarter == "Centrum" | quarter == "Rataje") & flat_area <= 50)
subset(rent, quarter %in% c("Centrum", "Rataje") & flat_area <= 50)
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
head(rent)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
rent[, 1] # w data.frame wybór jednej kolumny skutkuje wektorem
rent[, 1, drop = FALSE] # drop = FALSE mówi, że mamy dostać ramkę danych
rent[, 1:10]
rent[, ncol(rent), drop = FALSE] # ostatnia kolumna
rent[, c(1, 5, 10)]
rent[, c("id", "price", "flat_area")]
rent$price ## wektor
summary(rent$price)
subset(rent, select = 1)
subset(rent, select = 1:3)
subset(rent, select = c(1,5, 10))
subset(rent, select = c("id", "price", "flat_area"))
subset(rent, select = id:flat_area)
rent[1,]
rent[1:3,]
rent[c(1, 5, 10), ]
rent[nrow(rent), ] ## tail(rent, 1)
mtcars["Mazda RX4",] # używam tutaj nazw wierszy
rent[rent$price <= 300, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 15000, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 300 & rent$price < 500,
c("id", "price", "ad_title", "flat_area")]
subset(rent,
subset = price > 300 & price < 500,
select = c("id", "price", "ad_title", "flat_area"))
subset(rent,
price > 300 & price < 500,
c("id", "price", "ad_title", "flat_area"))
subset(rent, flat_for_students == 1 & price < 1000)
subset(rent, flat_for_students == TRUE & price < 1000)
subset(rent, flat_for_students == T & price < 1000)
subset(rent, flat_area <= 50)
subset(rent, flat_area <= 50 & quarter == "centrum") ## to jest źle (mała litera)
subset(rent, flat_area <= 50 & quarter == "Centrum")
subset(rent, (quarter == "Centrum" | quarter == "Rataje") & flat_area <= 50)
subset(rent, quarter %in% c("Centrum", "Rataje") & flat_area <= 50)
subset(rent, flat_deposit == price, c("price", "flat_deposit"))
subset(rent, (flat_deposit/2) > 3*price, c("price", "flat_deposit"))
subset(rent,
grepl("ataner", ad_title, ignore.case = T),
c("ad_title", "price"))
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
rent |> subset(individual == TRUE) |> nrow()
rent |> subset(flat_rooms == 1 & price >= 3000)
table(rent$quarter)
rent |> subset(flat_for_students == TRUE & quarter %in% c("Żegrze", "Strzeszyn"))
rent |> subset(flat_for_students == TRUE & quarter %in% c("Żegrze", "Strzeszyn")) |> nrow()
rent |> subset(flat_furnished == TRUE | (price < 500 | price > 5000))
rent |> subset(flat_furnished == TRUE | (price < 500 | price > 10000)) |>
```
rent |> subset(flat_furnished == TRUE | (price < 500 | price > 10000)) |> NROW()
rent |> subset(flat_furnished == TRUE & (price < 500 | price > 10000)) |> NROW()
rent |> subset(flat_furnished == TRUE & (price < 500 | price > 5000)) |> NROW()
1+1
sqrt(10)
plot(1:10, 1:10)
rabat1 <- 0.05
kwota <- 1000
rabat1*kwota -> wynik
n1 <- 10
n2 <- 8L ## liczba całkowita
n3 <- c(n1, n2)
n4 <- c(2023, 10, 9)
n4[2]
n4[c(1,3)]
n4[c(1,3)][1]
n4[2] <- 11
n4[c(1, 3)] <- c(2022, 10)
n4
seq(2, 10, 2)
1:10
10:1
-1:10
-(1:10)
kot <- "pazur"
kot[1]
koty <- c(kot, "bajtek", "dachowiec")
koty[3] <- 10
length(koty)
koty[length(koty)] ## odwołuję się do ostatniego elementu
n5 <- 1:10
sqrt(n5)
y <- 50 + 2.5*n5
n5 + sqrt(n5)
x1 <- seq(-10, 10, 1) # -10:10
x2 <- seq(1, 21, 1) # 1:21
y <- 10 + 2.6*x1 + x1*x2 + 0.8*sqrt(x2)
plot(x2, y)
A <- cbind(x1,x2, y)
A[1, 1]
A[1, ]
A[, 1]
A[1:5, 2:3]
wyniki_symulacji <- matrix(data = 0, ncol = 3, nrow = 10)
wyniki_symulacji
df1 <- data.frame(z1 = x1, z2 = x2, target = y)
df1$target
df1$target_1000 <- df1$target*1000
head(df1)
tail(df1)
dim(df1)
ncol(df1)
nrow(df1)
summary(df1)
summary(df1$target)
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
library(readxl)
rent <- read.csv2(file = "../data-raw/rent-poznan.csv")
head(rent)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
rent[, 1] # w data.frame wybór jednej kolumny skutkuje wektorem
rent[, 1, drop = FALSE] # drop = FALSE mówi, że mamy dostać ramkę danych
rent[, 1:10]
rent[, ncol(rent), drop = FALSE] # ostatnia kolumna
rent[, c(1, 5, 10)]
rent[, c("id", "price", "flat_area")]
rent$price ## wektor
summary(rent$price)
subset(rent, select = 1)
subset(rent, select = 1:3)
subset(rent, select = c(1,5, 10))
subset(rent, select = c("id", "price", "flat_area"))
subset(rent, select = id:flat_area)
rent[1,]
rent[1:3,]
rent[c(1, 5, 10), ]
rent[nrow(rent), ] ## tail(rent, 1)
mtcars["Mazda RX4",] # używam tutaj nazw wierszy
rent[rent$price <= 300, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 15000, c("id", "price", "ad_title", "flat_area")]
rent[rent$price > 300 & rent$price < 500,
c("id", "price", "ad_title", "flat_area")]
subset(rent,
subset = price > 300 & price < 500,
select = c("id", "price", "ad_title", "flat_area"))
subset(rent,
price > 300 & price < 500,
c("id", "price", "ad_title", "flat_area"))
subset(rent, flat_for_students == 1 & price < 1000)
subset(rent, flat_for_students == TRUE & price < 1000)
subset(rent, flat_for_students == T & price < 1000)
subset(rent, flat_area <= 50)
subset(rent, flat_area <= 50 & quarter == "centrum") ## to jest źle (mała litera)
subset(rent, flat_area <= 50 & quarter == "Centrum")
subset(rent, (quarter == "Centrum" | quarter == "Rataje") & flat_area <= 50)
subset(rent, quarter %in% c("Centrum", "Rataje") & flat_area <= 50)
subset(rent, flat_deposit == price, c("price", "flat_deposit"))
subset(rent, (flat_deposit/2) > 3*price, c("price", "flat_deposit"))
subset(rent,
grepl("ataner", ad_title, ignore.case = T),
c("ad_title", "price"))
rent$cena_m2 <- rent$price/ rent$flat_area
rent[,"cena_m2"] <- rent$price/ rent$flat_area
rent[["cena_m2"]] <- rent$price/ rent$flat_area
rent$centrum <- with(rent, quarter == "Centrum")
rent <- transform(rent, rataje = quarter == "Rataje")
head(rent)
rent <- transform(rent ,
price_log = log(price),
area_log = log(flat_area),
kawalerka = grepl("kawalerka", ad_title, ignore.case = TRUE))
rent$price_tanie_drogie <-
with(rent, ifelse(price < 500 | price > 15000, "tanie-drogie", "inne"))
head(rent[, c("price", "price_tanie_drogie")], n=50)
rent$flat_area_cut <- cut(rent$flat_area,
breaks = c(0, 10, 20, 30, Inf),
labels = c("(0, 10]", "(10, 20]", "(20, 30]", "30+"),
right = TRUE)
head(rent[, c("flat_area", "flat_area_cut")])
table(rent$flat_rooms)
prop.table(table(rent$flat_rooms))*100
barplot(table(rent$flat_rooms))
table(rent$flat_rooms, rent$flat_for_students)
tab1 <- with(rent, table(flat_rooms, flat_for_students))
prop.table(tab1)*100
prop.table(tab1, margin = 2)*100
xtabs( ~ flat_rooms + flat_for_students, data=rent)
summary(rent)
summary(rent$price)
apply(rent[, c("price", "flat_area")], 2, mean)
sapply(rent[, c("price", "flat_area")], mean)
lapply(rent[, c("price", "flat_area")], mean)
aggregate(price ~ quarter, data = rent, FUN = mean)
aggregate(cbind(price, flat_area) ~ quarter, data = rent, FUN = mean)
aggregate(cbind(cena=price, pow=flat_area) ~ quarter, data = rent, FUN = mean)
aggregate(cbind(cena=price, pow=flat_area) ~ quarter + flat_for_students,
data = rent, FUN = mean)
res <- aggregate(cbind(cena=price, pow=flat_area) ~ flat_rooms,
data = rent,
FUN = median,
subset = flat_for_students == TRUE)
res <- aggregate(cbind(cena=price, pow=flat_area) ~ flat_rooms,
data = subset(rent, flat_for_students == TRUE),
FUN = median)
res
rent$cena_m2
median(rent$cena_m2)
rent$cena_m2 <- rent$price/ rent$flat_area
summary(rent$cena_m2)
rent$flat_area_cut <- cut(rent$flat_area,
breaks = c(0, 10, 20, 30, Inf),
labels = c("(0, 10]", "(10, 20]", "(20, 30]", "30+"),
right = TRUE)
head(rent[, c("flat_area", "flat_area_cut")])
table(rent$flat_area_cut)
rent$flat_area_cut <- cut(rent$flat_area,
breaks = c(0, 30, 50, Inf),
labels = c("(0, 10]", "(10, 20]", "(20, 30]", right = FALSE)
rent$flat_area_cut <- cut(rent$flat_area,
breaks = c(0, 30, 50, Inf),
labels = c("(0, 10]", "(10, 20]", "(20, 30]", right = FALSE))
rent$flat_area_cut <- cut(rent$flat_area,
breaks = c(0, 30, 50, Inf), right = FALSE))
rent$flat_area_cut <- cut(rent$flat_area,
breaks = c(0, 30, 50, Inf), right = FALSE)
table(rent$flat_area_cut)
head(rent)
xtabs(~flat_for_students + flat_washmachine, data = rent)
xtabs(~flat_for_students + flat_washmachine, data = rent) |> prop.table(margin = 1)
xtabs(~flat_for_students + flat_washmachine, data = rent) |> prop.table(margin = 1)*100
xtabs(~flat_for_students + flat_washmachine, data = rent) |> prop.table(margin = 1)*100 |> round()
xtabs(~flat_for_students + flat_washmachine, data = rent) |> prop.table(margin = 1)*100 |> round(0)
xtabs(~flat_for_students + flat_washmachine, data = rent) |> prop.table(margin = 1)*100
prop.table(xtabs(~flat_for_students + flat_washmachine, data = rent), margin = 1)
res
res <- aggregate(cbind(cena=price, pow=flat_area) ~ flat_rooms,
data = subset(rent, flat_for_students == TRUE),
FUN = median)
res
table(rent$quarter)
res <- aggregate(cbind(cena=price, pow=flat_area) ~ quarter,
data = subset(rent, flat_for_students == TRUE & flat_rooms == 2),
FUN = median)
res
res <- aggregate(cbind(cena=price, pow=flat_area) ~ quarter,
data = subset(rent, flat_for_students == TRUE & flat_rooms == 2 & quarter == "Piątkowo"),
FUN = median)
res
aggregate(price ~ quarter, data = subset(rent, flat_for_students == TRUE & flat_rooms == 2 & quarter == "Piątkowo"), FUN = median)
library(readxl)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
hist(rent$price)
hist(rent$price, breaks = "fd")
hist(rent$price, breaks = "scott")
hist(rent$flat_area)
hist(rent$flat_area, breaks = "fd")
hist(rent$flat_area, breaks = "scott")
kawalerki <- subset(rent, flat_rooms == 1)
hist(kawalerki$price)
hist(kawalerki$price, breaks = "fd")
boxplot(price ~ flat_for_students, data=kawalerki)
boxplot(price ~ quarter, data=kawalerki)
barplot(table(kawalerki$flat_for_students))
barplot(table(kawalerki$flat_area))
plot(kawalerki$flat_area, kawalerki$price,
xlim = c(0, 70),
ylim = c(0, 4000),
xlab = "Powierzchnia",
ylab = "Cena",
main = "Zależność między powierzchnią i ceną")
sqrt(log(1:10))
1:10 |>
log() |>
sqrt()
subset(rent, flat_area < 50)
rent |>
subset(flat_area < 50) |>
subset(flat_area > 20) |>
subset(flat_rooms == 1) |>
aggregate(price ~ quarter, data = _, FUN= mean)
rent |>
subset(flat_area < 50) |>
subset(flat_area > 20) |>
subset(flat_rooms == 1) |>
subset(quarter %in% c("Rataje", "Winogrady")) |>
transform(pricem2 = price / flat_area) |>
aggregate(cbind(price, pricem2) ~ quarter, data = _, FUN= mean)
install.packages("tidyverse") ## instalacja pakietu
library(tidyverse)
library(readxl)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
rent |> select(id, price, flat_area)
rent |> select(1, 5, 10)
rent |> select(1, 5, price)
rent |> select(cena=price, pow=flat_area)
rent |> select(starts_with("p"), ends_with("id"), flat_for_students)
rent |> select(price:flat_for_students, -flat_rooms, -flat_build_year)
rent |> select(contains("ri"))
rent |> select_if(is.character)
rent |> select(contains("ad"))
rent |> select(flat_heating:flat_balcony, -ad_promo)
rent |> filter(price < 500)
rent |> filter(price < 500 & flat_rooms == 1)
rent |> filter(price < 500, flat_rooms == 1)
rent |> filter(price > 5000 | price < 200)
rent |> filter(between(price, 1000, 1200)) ## to i to poniżej jest tym samym
rent |> filter(price >= 1000, price <= 1200)
rent |> filter(price < mean(price))
rent |> filter(price < mean(price), .by = individual)
rent |> filter(quarter %in% c("Rataje", "Winogrady"))
rent |> mutate(pricem2 = price/flat_area,
pricem2_log = log(pricem2))
rent |> mutate(pricem2_gr = mean(price), .by = quarter)
rent |> mutate_at(vars(price, flat_area), log)
rent |> mutate_if(is.logical, as.numeric)
rent <- read_excel(path = "../data-raw/rent-poznan.xlsx")
rent <- as.data.frame(rent)
head(rent)
rent |>
subset(price >=2000 & price <=5000) |>
subset(flat_rooms %in% 1:2) |>
subset(flat_area >=40 & flat_rooms <= 80)
rent |>
subset(price >=2000 & price <=5000) |>
subset(flat_rooms %in% 1:2) |>
subset(flat_area >=40 & flat_rooms <= 80) |>
with(data = _, plot(flat_area, price))
rent |>
subset(price >=2000 & price <=5000) |>
subset(flat_rooms %in% 1:2) |>
subset(flat_area >=40 & flat_area <= 80) |>
with(data = _, plot(flat_area, price))
read_excel("../data-raw/rent-poznan.xlsx") |>
subset(price >=2000 & price <=5000) |>
subset(flat_rooms %in% 1:2) |>
subset(flat_area >=40 & flat_area <= 80) |>
with(data = _,
plot(flat_area, price,
xlab = "Powierzchnia", ylab = "Cena",
main = "Zależność między powierzchnią i ceną"))
?pick
library(remotes)
remotes::install_github("franciscorichter/rgm", build_vignettes = T)
1
library(rgm)
vignette("rgm-introduction")
a<-sim.rgm(mcmc_iter = 10)
